<?xml version="1.0" encoding="UTF-8"?>
<project
    xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>d3s</groupId>
    <artifactId>activemq-camel-client</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <jakarta.jaxb.version>2.3.3</jakarta.jaxb.version>
        <!-- ActiveMQ 5.16.6 is the last version to integrate the Camel ActiveMQ plugin.
             ActiveMQ 5.17.0 expects developers to use the Camel ActiveMQ plugin from
             Camel itself, but dependency hell lies that way. -->
        <camel.version>3.2.0</camel.version> <!-- Set to match ActiveMQ Camel dependency. -->
        <spring.version>4.3.30.RELEASE</spring.version> <!-- Set to match ActiveMQ Spring dependency. -->
        <activemq.version>5.16.6</activemq.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!-- We need the ActiveMQ runtime libraries. -->
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-all</artifactId>
            <version>${activemq.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Broker execution from the build tool. -->
            <plugin>
                <groupId>org.apache.activemq.tooling</groupId>
                <artifactId>activemq-maven-plugin</artifactId>
                <version>${activemq.version}</version>
                <configuration>
                    <configUri>xbean:file:src/main/conf/activemq.xml</configUri>
                </configuration>
                <dependencies>
                    <!-- Example needs the Camel runtime components. -->
                    <dependency>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-aop</artifactId>
                        <version>${spring.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.camel</groupId>
                        <artifactId>camel-core</artifactId>
                        <version>${camel.version}</version>
                    </dependency>
                    <!-- Broker needs the Jakarta JAXB libraries. -->
                    <dependency>
                        <groupId>jakarta.xml.bind</groupId>
                        <artifactId>jakarta.xml.bind-api</artifactId>
                        <version>${jakarta.jaxb.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>com.sun.xml.bind</groupId>
                        <artifactId>jaxb-impl</artifactId>
                        <version>${jakarta.jaxb.version}</version>
                        <scope>runtime</scope>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- Optional execution from build tool. -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <executions>
                    <execution>
                        <id>initial-producer</id>
                        <configuration>
                            <mainClass>InitialProducer</mainClass>
                        </configuration>
                    </execution>
                    <execution>
                        <id>splitter</id>
                        <configuration>
                            <mainClass>Splitter</mainClass>
                        </configuration>
                    </execution>
                    <execution>
                        <id>text-consumer</id>
                        <configuration>
                            <mainClass>TextConsumer</mainClass>
                        </configuration>
                    </execution>
                    <execution>
                        <id>number-consumer</id>
                        <configuration>
                            <mainClass>NumberConsumer</mainClass>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
